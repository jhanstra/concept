/*
  NOTIFICATION
  ------------

  An alert that pins to the corner of the screen when triggered by JavaScript. It can be set to disappear after a certain period of time, or to stay put until the user clicks on it. A custom action can be asigned to a notification as well.

  Optionally, the notifications directive can also tap into the browser's native notification support, if it exists.
*/

/// @Foundation.settings
// Notification
$notification-default-position: right top !default;
$notification-width: rem-calc(400) !default;
$notification-offset: $global-padding !default;

$notification-background: $primary-color !default;
$notification-color: white !default;
$notification-padding: $global-padding !default;
$notification-radius: 4px !default;

$notification-icon-size: 60px !default;
$notification-icon-margin: $global-padding !default;
$notification-icon-align: top !default;
///

%notification {
  position: fixed;
  z-index: 1000;
  display: flex;

  h1 {
    font-size: 1.25em;
    margin: 0;
  }
  p {
    margin: 0;
  }

  // Placeholder animation
  transition: transform 0.25s ease-out;
  &.is-active {
    transform: translateX(0%) translateY(0%) !important;
  }

  .close-button {
    color: white;
  }
}

@mixin notification-layout(
  $x: nth($notification-default-position, 1),
  $y: nth($notification-default-position, 2),
  $size: $notification-width,
  $offset: $notification-offset
) {
  width: $size;

  @if $x == right {
    right: $offset;
    transform: translateX(110%);
  }
  @else if $x == left {
    left: $offset;
    transform: translateX(-110%);
  }
  @else if $x == middle {
    left: 50%;
    margin-left: -($size / 2);

    @if $y == top {
      transform: translateY(-110%);
    }
    @else if $y == bottom {
      transform: translateY(110%);
    }
  }

  @if $y == top {
    top: $offset;
  }
  @else if $y == bottom {
    top: auto;
    bottom: $offset;
  }

  // On small screens, notifications are full width but maintain their vertical orientation
  @include breakpoint(small only) {
    width: auto;
    left: $offset;
    right: $offset;
    margin-left: 0;
  }
}
@mixin notification-style(
  $background: $notification-background,
  $color: $notification-color,
  $padding: $notification-padding,
  $radius: $notification-radius
) {
  background: $background;
  padding: $padding;
  border-radius: $radius;

  &, h1, h2, h3, h4, h5, h6 {
    color: $color;
  }
}

@mixin notification(
  $x: nth($notification-default-position, 1),
  $y: nth($notification-default-position, 2),
  $size: $notification-width,
  $offset: $notification-offset,
  $background: $notification-background,
  $color: $notification-color,
  $padding: $notification-padding,
  $radius: $notification-radius
) {
  @extend %notification;
  @include notification-layout($x, $y, $size, $offset);
  @include notification-style($background, $color, $padding, $radius);
}

@mixin notification-icon(
  $size: $notification-icon-size,
  $margin: $notification-icon-margin,
  $align: $notification-icon-align
) {
  $alignments: (
    top: flex-start,
    middle: middle,
    bottom: flex-end,
  );
  flex: 0 0 $size;
  margin-right: $global-padding;
  align-self: map-get($alignments, $align);

  img {
    width: 100%;
    height: auto;
  }
}

/*
  CSS Output
*/

@include exports(notification) {
  .notification {
    @include notification;

    &.top-right     { @include notification-layout(right, top); }
    &.top-left      { @include notification-layout(left, top); }
    &.top-middle    { @include notification-layout(middle, top); }

    &.bottom-right  { @include notification-layout(right, bottom); }
    &.bottom-left   { @include notification-layout(left, bottom); }
    &.bottom-middle { @include notification-layout(middle, bottom); }

    &.success   { @include notification-style($success-color) }
    &.warning   { @include notification-style($warning-color) }
    &.alert     { @include notification-style($alert-color) }
    &.dark      { @include notification-style($dark-color, #fff) }
  }

  .notification-icon {
    @include notification-icon;
  }
  .notification-content {
    flex: 1;
  }
}
